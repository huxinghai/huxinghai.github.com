<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ka Ka Blog]]></title>
  <link href="http://huxinghai1988.github.com/atom.xml" rel="self"/>
  <link href="http://huxinghai1988.github.com/"/>
  <updated>2015-01-11T11:20:38+08:00</updated>
  <id>http://huxinghai1988.github.com/</id>
  <author>
    <name><![CDATA[kaka]]></name>
    <email><![CDATA[huxinghai1988@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用pomelo做聊天服务器分配connector服务使用http分配]]></title>
    <link href="http://huxinghai1988.github.com/blog/2015/01/11/pomelo-gate-http/"/>
    <updated>2015-01-11T10:10:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2015/01/11/pomelo-gate-http</id>
    <content type="html"><![CDATA[<p>如果使用pomelo默认的gate分配很慢, 因为socket去连接服务，然后disconnect再连接connector
服务器这过程就会拖慢用户连接时间，使用http方便而且快。</p>

<p>pomelo 本身支持Plugin扩展，已经有人用express写了<a href="https://github.com/pipi32167/pomelo-http-plugin">pomelo-http</a>插件了, 插件存在一个问题定义post请求拿不到参数, <em>body-parser</em>使用可以解决这个问题。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">dispatcher</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;../../../util/dispatcher&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">app</span><span class="p">,</span> <span class="nx">http</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">http</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;/system/dispatcher&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">c_type</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">c_type</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">uid</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">uuid</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">c_type</span> <span class="o">=</span> <span class="p">(</span><span class="nx">c_type</span> <span class="o">&amp;&amp;</span> <span class="nx">c_type</span><span class="o">===</span><span class="s1">&#39;mqtt&#39;</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;mqtt-connector&#39;</span> <span class="o">:</span> <span class="s1">&#39;sio-connector&#39;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">connectors</span> <span class="o">=</span> <span class="nx">app</span><span class="p">.</span><span class="nx">getServersByType</span><span class="p">(</span><span class="nx">c_type</span><span class="p">);</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="nx">dispatcher</span><span class="p">.</span><span class="nx">dispatch</span><span class="p">(</span><span class="nx">uid</span><span class="p">,</span> <span class="nx">connectors</span><span class="p">);</span>
</span><span class='line'>    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">s</span><span class="p">){</span>
</span><span class='line'>      <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">403</span><span class="p">).</span><span class="nx">json</span><span class="p">({</span><span class="nx">error</span><span class="o">:</span> <span class="s2">&quot;not invalid server connectors!!!&quot;</span><span class="p">})</span>
</span><span class='line'>    <span class="p">}</span><span class="k">else</span><span class="p">{</span>
</span><span class='line'>      <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">({</span><span class="nx">host</span><span class="o">:</span> <span class="nx">s</span><span class="p">.</span><span class="nx">host</span><span class="p">,</span> <span class="nx">port</span><span class="o">:</span> <span class="nx">s</span><span class="p">.</span><span class="nx">clientPort</span><span class="p">});</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pomelo centOs 环境部署]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/12/11/pomelo-deploy/"/>
    <updated>2014-12-11T23:44:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/12/11/pomelo-deploy</id>
    <content type="html"><![CDATA[<p>pomelo强大的可伸缩性和灵活性使得pomelo也可以作为通用的分布式实时应用开发框架，用于一些高实时应用的开发，而且pomelo在很多方面的表现甚至超越了现有的开源实时应用框架</p>

<p>由于pomelo 依赖node-gyp这modules所以有点麻烦,安装之前配置python环境，官方推荐版本2.7</p>

<pre><code>npm config set python /usr/local/bin/python2.7

npm install -g node-gyp

npm install -g pomelo 

pomelo start -e production --daemon

//host 与 port 是master地址
pomelo stop --host 172.0.0.1 --port 4005
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby bundle gem的配置]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/12/10/bundle-config/"/>
    <updated>2014-12-10T14:11:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/12/10/bundle-config</id>
    <content type="html"><![CDATA[<p>在项目里我们用的比较多的bundle install当遇到一些gem包环境问题时，在安装gem时需要加一些配置
比如：</p>

<pre><code>gem install pg -v '0.12.0' -- --with-pg-config=/usr/pgsql-9.1/bin/pg_config
</code></pre>

<p>但是当我们要把pg加入Gemfile文件时，后面的配置怎么设置，这个时候我们要用到bundle config的东西，可以在bundle
读取相应的配置, 我们可以如下设置：</p>

<pre><code>bundle config build.pg --with-pg-config=/usr/pgsql-9.1/bin/pg_config
</code></pre>

<p>bundle config 详解：</p>

<pre><code>#查看配置
bundle config

#查看某种name的配置
bundle config NAME

#设置值
bundle config NAME VALUE

#设置全局
bundle config --global NAME VALUE

#设置当前目录下
bundle config --local NAME VALUE 

#删除一个配置
bundle config --delete NAME
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails调用oracle的存储过程]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/08/21/oracle-call-stored-procedure/"/>
    <updated>2014-08-21T00:41:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/08/21/oracle-call-stored-procedure</id>
    <content type="html"><![CDATA[<p>调用方式如下：</p>

<pre><code>cursor = ActiveRecord::Base.connection.raw_connection.parse("BEGIN MYPROC(:age, :name, :fathers_age, :capital_name); END;")
cursor.bind_param(:name, 'akshay')
cursor.bind_param(:age, '20')
cursor.bind_param(:fathers_age, nil, Fixnum)
cursor.bind_param(:capital_name, nil, String, 20)
cursor.exec()
p cursor[:fathers_age], cursor[:capital_name]


require 'sequel'
db = Sequel.connect(:adapter=&gt;'oracle', :host=&gt;'localhost', :database=&gt;'db_name', :user=&gt;'test', :password=&gt;'test')
db.execute("begin MYPROC(:age, :name, :fathers_age, :capital_name); end;", {:arguments =&gt; [[20, "integer"], ["akshay", "string"], [nil, "integer"], [nil, "string"]]}) { |cursor| [cursor[3], cursor[4]] }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby根据不同的异常处理不同事件]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/07/28/rails-raise/"/>
    <updated>2014-07-28T23:39:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/07/28/rails-raise</id>
    <content type="html"><![CDATA[<p>在一个<em>class</em>里面你想根据不同的异常回调不同事件</p>

<pre><code>class NoMoneyException &lt; StandardError
end

class ValidNumberException &lt; StandardError
end

class Sale

    def self.create(options)
        obj = new(options)
        obj.validation
    end

    def validation

        raise NoMoneyException if money &gt; current_user.money
        raise ValidNumberException if number &gt; warehouse.nventory
    end
end


begin
    Sale.create({...})
rescue NoMoneyException =&gt; e
    callback ..
rescue ValidNumberException =&gt; e
    callback ..
end
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[两个常用的shell脚本]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/07/24/shell-service-dump-and-cut/"/>
    <updated>2014-07-24T22:10:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/07/24/shell-service-dump-and-cut</id>
    <content type="html"><![CDATA[<ol>
<li><p>日志切割</p>

<pre><code> #!/bin/sh
 log_path="/home/littlefire/var/www/apps/littlefire/current/log"
 to_day=`date -d "yesterday" +"%Y%m%d"`
 cp ${log_path}/production.log ${log_path}/production_${to_day}.log
 echo "" &gt; ${log_path}/production.log
 chown littlefire:littlefire ${log_path}/production.log
 bzip2 ${log_path}/production_${to_day}.log
</code></pre></li>
<li><p>mysql数据库定时备份</p>

<pre><code> #!/bin/sh
 #
 #发送Email的话要安装 mutt与msmtp才可以

 today=`date -d "today" +"%Y%m%d"`
 path=/home/kaka/data_backup/
 filename=backup_${today}.sql
 file_path=${path}${filename}
 tar_name=${path}backup_${today}.tar.gz
 /usr/bin/mysqldump -uroot -p** database_name &gt; ${file_path}

 tar -zcvf $tar_name -C $path $filename
 rm $file_path
 find $path -mtime +6 -type f -name backup_*.tar.gz | xargs rm -rf 
 #echo "littefire data dump ${today}" | mutt -s "${today} dump data" ***@qq.com -a $tar_name
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[异常平台 exceptional]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/07/08/exceptional/"/>
    <updated>2014-07-08T22:21:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/07/08/exceptional</id>
    <content type="html"><![CDATA[<p>visit: <a href="https://www.exceptional.io">官网</a></p>

<p>一个不错的统计项目的出错请求,而且支持多种语言，但是不是免费($9/month)</p>

<h3>Rails 使用方式</h3>

<ol>
<li><p>在Gemfile配置</p>

<pre><code> gem exceptional
</code></pre></li>
<li><p>打包</p>

<pre><code> bundle install
</code></pre></li>
<li><p>生成exceptional的配置文件</p>

<pre><code> #YOUR-API-KEY 你申请的key
 bundle exec exceptional install YOUR-API-KEY
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ngrok反向代理工具]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/06/26/ngrok/"/>
    <updated>2014-06-26T14:24:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/06/26/ngrok</id>
    <content type="html"><![CDATA[<p>ngrok是个款不错的工具，在我们开发中经常要用到。</p>

<p>visit: <a href="https://ngrok.com/">官网</a></p>

<h3>使用方式</h3>

<ol>
<li><p>简单的运行</p>

<pre><code> // 代理你电脑3001端口， 运行后通过http://127.0.0.1:4040查看请求状态    
 ngrok 3001
</code></pre></li>
<li><p>验证运行</p>

<pre><code> // authtoken你在官方注册，就会生成一个, authtoken只要在电脑上运行一次就可以了会
 // 记录的, 如果你验证了的话ngrok 生成的前缀域名不会被占用和变化
 ngrok -authtoken U54UzZiDLFQxyZ-Ow*** 3001
</code></pre></li>
<li><p>需要别人验证才可以浏览</p>

<pre><code> // helmet用户名, 12345密码
 ngrok -httpauth="helmet:12345" 3001
</code></pre></li>
<li><p>设置前缀域名</p>

<pre><code> ngrok -subdomain=example 3001
</code></pre></li>
<li><p>tcp代理</p>

<pre><code> ngrok -proto=tcp 22
</code></pre></li>
<li><p>指定其它服务器代理</p>

<pre><code> //为192.168.1.16服务器的3001端口代理
 ngrok 192.168.1.16:3001
</code></pre></li>
<li><p>运行多个类型服务</p>

<pre><code> // ngrok.yml配置类型如下

 tunnels:
   client:
     proto:
       https: "3000"
     auth: user:password
   c99bba1.ngrok.com:
     proto:
       http: "3000"
   ssh:
     proto:
       tcp: "22"


 // config: 配置文件路径
 // start: 运行哪几种类型服务(client, ssh c99bba1.ngrok.com)
 ngrok -log=stdout -authtoken=U54UzZiDLFQxyZ-Ow*** -config=ngrok.yml start client ssh c99bba1.ngrok.com
</code></pre></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git 错误 object is empy / corrupt]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/04/10/git-error/"/>
    <updated>2014-04-10T14:12:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/04/10/git-error</id>
    <content type="html"><![CDATA[<h4>问题</h4>

<p>早上上班开始工作是准备git push到远程服务器时，出现下面错误！我估计是之前的merge导致的</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  error: object file .git/objects/xx/xxx is empty
</span><span class='line'>  fatal: loose object xxx (stored in .git/objects/xx/xxx is corrupt</span></code></pre></td></tr></table></div></figure>


<h4>解决方案</h4>

<p>参考<a href="http://vincesalvino.blogspot.jp/2013/08/git-empty-files-corrupt-objects-and.html">链接</a>, 其实我就是删除空的commit就可以了</p>

<pre><code>find .git/objects/ -size 0 -exec rm -f {} \; 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[elasticsearch 动态加载属性的mapping]]></title>
    <link href="http://huxinghai1988.github.com/blog/2014/01/25/elasticsearch-dynamic-template/"/>
    <updated>2014-01-25T15:13:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2014/01/25/elasticsearch-dynamic-template</id>
    <content type="html"><![CDATA[<p>代码示例:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>  curl -XPUT <span class="s1">&#39;localhost:9200/products&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">    &quot;settings&quot;: {</span>
</span><span class='line'><span class="s1">      &quot;analysis&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;analyzer&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;pinyin_analyzer&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;tokenizer&quot;: &quot;my_pinyin&quot;,</span>
</span><span class='line'><span class="s1">            &quot;filter&quot;: [&quot;standard&quot;, &quot;nGram&quot;]</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        },</span>
</span><span class='line'><span class="s1">        &quot;tokenizer&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;my_pinyin&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;type&quot;: &quot;pinyin&quot;,</span>
</span><span class='line'><span class="s1">            &quot;first_letter&quot;: &quot;prefix&quot;,</span>
</span><span class='line'><span class="s1">            &quot;padding_char&quot;: &quot;&quot;</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">      }</span>
</span><span class='line'><span class="s1">    },</span>
</span><span class='line'><span class="s1">    &quot;mappings&quot;: {</span>
</span><span class='line'><span class="s1">      &quot;product&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;dynamic_templates&quot;: [</span>
</span><span class='line'><span class="s1">          {</span>
</span><span class='line'><span class="s1">            &quot;property_template&quot;: {</span>
</span><span class='line'><span class="s1">              &quot;path_match&quot;: &quot;properties.*&quot;,</span>
</span><span class='line'><span class="s1">              &quot;mapping&quot;: {</span>
</span><span class='line'><span class="s1">                &quot;type&quot;: &quot;multi_field&quot;,</span>
</span><span class='line'><span class="s1">                &quot;fields&quot;: {</span>
</span><span class='line'><span class="s1">                  &quot;{name}&quot;: {</span>
</span><span class='line'><span class="s1">                    &quot;type&quot;: &quot;string&quot;,</span>
</span><span class='line'><span class="s1">                    &quot;analyzer&quot; : &quot;pinyin_analyzer&quot;,</span>
</span><span class='line'><span class="s1">                    &quot;boost&quot;: 10,</span>
</span><span class='line'><span class="s1">                    &quot;store&quot;: &quot;no&quot;,</span>
</span><span class='line'><span class="s1">                    &quot;term_vector&quot;: &quot;with_positions_offsets&quot;</span>
</span><span class='line'><span class="s1">                  },</span>
</span><span class='line'><span class="s1">                  &quot;{name}_untouched&quot;: {</span>
</span><span class='line'><span class="s1">                    &quot;type&quot;: &quot;string&quot;,</span>
</span><span class='line'><span class="s1">                    &quot;index&quot;: &quot;not_analyzed&quot;</span>
</span><span class='line'><span class="s1">                  }</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">              }</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        ]</span>
</span><span class='line'><span class="s1">      }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  }&#39;</span>
</span><span class='line'>
</span><span class='line'>  curl -XPOST <span class="s1">&#39;localhost:9200/products/product&#39;</span> -d <span class="s1">&#39;{name: &quot;加多宝&quot;, properties: {ping: 1} }&#39;</span>
</span><span class='line'>  curl -XPOST <span class="s1">&#39;localhost:9200/products/product&#39;</span> -d <span class="s1">&#39;{name: &quot;水杯&quot;, properties: {ge: 1} }&#39;</span>
</span><span class='line'>
</span><span class='line'>  curl -XGET <span class="s1">&#39;localhost:9200/products/product/_mapping?pretty&#39;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[elasticsearch脚本排序]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/11/05/elasticsearch-script-sort/"/>
    <updated>2013-11-05T09:37:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/11/05/elasticsearch-script-sort</id>
    <content type="html"><![CDATA[<p>由于自己要自定义score, 所以才会使用script来写复杂的sort</p>

<h4>javascript script 排序</h4>

<ul>
<li>安装 <a href="https://github.com/elasticsearch/elasticsearch-lang-javascript">elasticsearch-lang-javascript</a></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bin/plugin -install elasticsearch/elasticsearch-lang-javascript/1.4.0
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>写js脚本</li>
</ul>


<p>在你的配置目录下新建文件scripts/products/sort.js, 我的配置目录是<em>/etc/elasticsearch</em>,简单实例:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>  <span class="nx">doc</span><span class="p">.</span><span class="nx">_score</span><span class="p">.</span><span class="nx">value</span> <span class="o">+</span> <span class="nx">doc</span><span class="p">.</span><span class="nx">likes</span><span class="p">.</span><span class="nx">value</span>
</span><span class='line'><span class="p">})()</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>查询</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XGET <span class="s1">&#39;http://localhost:9200/products/_search?pretty&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">  &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">    &quot;custom_score&quot;: {</span>
</span><span class='line'><span class="s1">      &quot;script&quot;: &quot;global_product&quot;,</span>
</span><span class='line'><span class="s1">      &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;filter&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;and&quot;: [</span>
</span><span class='line'><span class="s1">              {</span>
</span><span class='line'><span class="s1">                &quot;term&quot;: {</span>
</span><span class='line'><span class="s1">                  &quot;_type&quot;: &quot;product&quot;</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">              }</span>
</span><span class='line'><span class="s1">            ]</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">      }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  },</span>
</span><span class='line'><span class="s1">  &quot;sort&quot;: [</span>
</span><span class='line'><span class="s1">    {</span>
</span><span class='line'><span class="s1">      &quot;_score&quot;: &quot;desc&quot;</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  ]</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>products_sort: products是目录sort脚本文件名</p>

<h4>native script 排序</h4>

<ul>
<li><p>案例</p>

<p><a href="https://github.com/imotov/elasticsearch-native-script-example">官方example</a></p>

<p><a href="https://github.com/huxinghai1988/sort-score-script">自己写了个简单的排序</a></p></li>
<li><p>查询</p></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -X GET <span class="s1">&#39;http://localhost:9200/products/_search?pretty&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">  &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">    &quot;custom_score&quot;: {</span>
</span><span class='line'><span class="s1">      &quot;script&quot;: &quot;productSort&quot;,</span>
</span><span class='line'><span class="s1">      &quot;lang&quot;: &quot;native&quot;,</span>
</span><span class='line'><span class="s1">      &quot;query&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;filter&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;and&quot;: [</span>
</span><span class='line'><span class="s1">              {</span>
</span><span class='line'><span class="s1">                &quot;term&quot;: {</span>
</span><span class='line'><span class="s1">                  &quot;_type&quot;: &quot;product&quot;</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">              }</span>
</span><span class='line'><span class="s1">            ]</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">      }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  },</span>
</span><span class='line'><span class="s1">  &quot;sort&quot;: [</span>
</span><span class='line'><span class="s1">    {</span>
</span><span class='line'><span class="s1">      &quot;_score&quot;: &quot;desc&quot;</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  ]</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>单机做测试，js与native排序性能方面有差距同样的5W数据,比较一下查询速度：
  js：70ms, native: 20ms</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[elasticsearch 多个索引查询，根据不同类型条件判定]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/09/25/elasticsearch-mutiple-search/"/>
    <updated>2013-09-25T09:18:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/09/25/elasticsearch-mutiple-search</id>
    <content type="html"><![CDATA[<h3>CURL</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -XGET <span class="s1">&#39;http://localhost:9200/indexA,indexB/_search?pretty=1&#39;</span> -d <span class="s1">&#39;{</span>
</span><span class='line'><span class="s1">&quot;query&quot; : {</span>
</span><span class='line'><span class="s1">    &quot;bool&quot;: {</span>
</span><span class='line'><span class="s1">      &quot;should&quot;: [{</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;filter&quot;:{</span>
</span><span class='line'><span class="s1">            &quot;and&quot;: [</span>
</span><span class='line'><span class="s1">              {</span>
</span><span class='line'><span class="s1">                &quot;range&quot;:{</span>
</span><span class='line'><span class="s1">                  &quot;start_time&quot;:{</span>
</span><span class='line'><span class="s1">                    &quot;lte&quot;: &quot;2013-09-24T00:00:00+08:00&quot;</span>
</span><span class='line'><span class="s1">                  }</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">              },{</span>
</span><span class='line'><span class="s1">                &quot;range&quot;: {</span>
</span><span class='line'><span class="s1">                  &quot;end_time&quot;: {</span>
</span><span class='line'><span class="s1">                    &quot;gt&quot;: &quot;2013-09-24T00:00:00+08:00&quot;</span>
</span><span class='line'><span class="s1">                  }</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">              },</span>
</span><span class='line'><span class="s1">              {</span>
</span><span class='line'><span class="s1">                &quot;term&quot;: {</span>
</span><span class='line'><span class="s1">                  &quot;_type&quot;: &quot;TypeA&quot;</span>
</span><span class='line'><span class="s1">                }</span>
</span><span class='line'><span class="s1">              }]</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">      },{</span>
</span><span class='line'><span class="s1">        &quot;filtered&quot;: {</span>
</span><span class='line'><span class="s1">          &quot;filter&quot;: {</span>
</span><span class='line'><span class="s1">            &quot;term&quot;: {</span>
</span><span class='line'><span class="s1">              &quot;_type&quot;: &quot;TypeB&quot;</span>
</span><span class='line'><span class="s1">            }</span>
</span><span class='line'><span class="s1">          }</span>
</span><span class='line'><span class="s1">        }</span>
</span><span class='line'><span class="s1">      }]</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  },</span>
</span><span class='line'><span class="s1">  &quot;sort&quot;: [</span>
</span><span class='line'><span class="s1">    {</span>
</span><span class='line'><span class="s1">      &quot;_script&quot;: {</span>
</span><span class='line'><span class="s1">        &quot;script&quot;: &quot;doc[\u0027score\u0027].value/((time()-doc[\u0027start_time_ms\u0027].value) / 3600)&quot;,</span>
</span><span class='line'><span class="s1">        &quot;type&quot;: &quot;number&quot;,</span>
</span><span class='line'><span class="s1">        &quot;order&quot;: &quot;desc&quot;</span>
</span><span class='line'><span class="s1">      },</span>
</span><span class='line'><span class="s1">      &quot;_score&quot;: {</span>
</span><span class='line'>
</span><span class='line'><span class="s1">      }</span>
</span><span class='line'><span class="s1">    }</span>
</span><span class='line'><span class="s1">  ]</span>
</span><span class='line'><span class="s1">}&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>indexA 与 indexB 索引的 TypeA与TypeB</p>

<h4>ruby gem  Tire</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Tire</span><span class="o">.</span><span class="n">search</span> <span class="o">[</span><span class="s1">&#39;indexA&#39;</span><span class="p">,</span> <span class="s1">&#39;indexB&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">from</span> <span class="n">_from</span>
</span><span class='line'>  <span class="n">size</span> <span class="n">_size</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">query</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">boolean</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">should</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">filtered</span> <span class="k">do</span>
</span><span class='line'>          <span class="n">filter</span> <span class="ss">:range</span><span class="p">,</span> <span class="ss">:end_time</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="n">gt</span><span class="p">:</span> <span class="n">toDay</span><span class="p">}</span>
</span><span class='line'>          <span class="n">filter</span> <span class="ss">:range</span><span class="p">,</span> <span class="ss">:start_time</span> <span class="o">=&gt;</span> <span class="p">{</span><span class="n">lte</span><span class="p">:</span> <span class="n">toDay</span><span class="p">}</span>
</span><span class='line'>          <span class="n">filter</span> <span class="ss">:term</span><span class="p">,</span> <span class="ss">:_type</span> <span class="o">=&gt;</span> <span class="s2">&quot;TypeA&quot;</span>
</span><span class='line'>          <span class="n">filter</span> <span class="ss">:term</span><span class="p">,</span> <span class="ss">:status</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'>          <span class="n">filter</span> <span class="ss">:terms</span><span class="p">,</span> <span class="p">{</span><span class="s2">&quot;category.id&quot;</span> <span class="o">=&gt;</span> <span class="n">category_ids</span><span class="p">}</span> <span class="k">if</span> <span class="n">q</span><span class="o">[</span><span class="ss">:catalog_id</span><span class="o">].</span><span class="n">present?</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">should</span> <span class="k">do</span>
</span><span class='line'>        <span class="n">filtered</span> <span class="k">do</span>
</span><span class='line'>          <span class="n">filter</span> <span class="ss">:term</span><span class="p">,</span> <span class="p">{</span><span class="ss">:_type</span> <span class="o">=&gt;</span> <span class="s2">&quot;TypeB&quot;</span><span class="p">}</span>
</span><span class='line'>        <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">sort</span><span class="p">(</span><span class="s2">&quot;_script&quot;</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class='line'>    <span class="ss">:script</span> <span class="o">=&gt;</span> <span class="s2">&quot;doc[&#39;score&#39;].value/((time()-doc[&#39;start_time_ms&#39;].value) / 3600)&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:type</span>   <span class="o">=&gt;</span> <span class="s2">&quot;number&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="ss">:order</span>  <span class="o">=&gt;</span> <span class="s2">&quot;desc&quot;</span>
</span><span class='line'>  <span class="p">},</span> <span class="s2">&quot;_score&quot;</span> <span class="o">=&gt;</span> <span class="p">{})</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby 2.0三个重要特性实例收藏]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/06/22/ruby2-0/"/>
    <updated>2013-06-22T00:36:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/06/22/ruby2-0</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://dev.af83.com/2012/10/19/ruby-2-0-module-prepend.html">Module#prepend</a></li>
<li><a href="http://dev.af83.com/2012/10/19/ruby-2-0-module-prepend.html">Module#refine</a></li>
<li><a href="http://dev.af83.com/2013/02/18/ruby-2-0-keyword-arguments.html">Keyword arguments</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[gem requirejs-rails assets precompile 简介]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/06/22/requirejs-rails/"/>
    <updated>2013-06-22T00:13:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/06/22/requirejs-rails</id>
    <content type="html"><![CDATA[<p>安装<a href="https://github.com/jwhitley/requirejs-rails">requirejs-rails</a>, 然后新建配置文件<code>config/requirejs.yml</code></p>

<p>requirejs.yml</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#配置单个模块，会编译一个单独的模块</span>
</span><span class='line'><span class="n">modules</span><span class="p">:</span>
</span><span class='line'>  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="s1">&#39;mytoplevel&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#路径</span>
</span><span class='line'><span class="n">paths</span>
</span><span class='line'>  <span class="n">jquery</span><span class="p">:</span> <span class="s2">&quot;lib/jquery.js&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#设置依赖关系</span>
</span><span class='line'><span class="n">shim</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>其实与requirejs配置差不多，只是rails会根据requirejs.yml编译</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ubuntu rabbitmq 服务器安装过程]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/05/11/rabbitmq-install/"/>
    <updated>2013-05-11T12:28:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/05/11/rabbitmq-install</id>
    <content type="html"><![CDATA[<p>rabbitmq是用于消息列队处理的,准备研究一下它来做消息处理
rabbitmq是用Erlang开发的,所有安装之前要部署Erlang环境</p>

<h4>Erlang部署</h4>

<pre><code>wget https://elearning.erlang-solutions.com/binaries/sources/otp_src_R16B.tar.gz
tar xvzf otp_src_R16B.tar.gz
cd otp_src_R16B
./configure
make &amp;&amp; make install
</code></pre>

<h4>Rabbitmq部署</h4>

<p><a href="http://www.rabbitmq.com/install-debian.html">官方安装文档</a></p>

<ol>
<li><p>添加公共key</p>

<p> wget http://www.rabbitmq.com/rabbitmq-signing-key-public.asc</p>

<p> sudo apt-key add rabbitmq-signing-key-public.asc</p></li>
<li><p>安装</p>

<p> sudo apt-get install rabbitmq-server</p></li>
</ol>


<p><a href="http://www.rabbitmq.com/configure.html">官方配置文档</a>配置文件路径在<code>/etc/rabbitmq/</code></p>

<h4>启动rabbitmq_management管理</h4>

<pre><code>cd /usr/lib/rabbitmq/lib/rabbitmq_server-2.7.1/sbin
sudo ./rabbitmq-plugins enable rabbitmq_management
</code></pre>

<p>然后浏览地址<code>http://server-name:55672/</code>, 官方说3.0以下版本端口是55672</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[postMessage 跨域通讯]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/05/03/post-message/"/>
    <updated>2013-05-03T23:48:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/05/03/post-message</id>
    <content type="html"><![CDATA[<p>不相同的域可以相互通讯, 例如iframe与页面进行通讯, <a href='https://github.com/daepark/postmessage'>postMessage</a>是个封装不错的包<br /></p>

<p>简单实例解释</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>  <span class="c1">//在iframe 绑定频道</span>
</span><span class='line'>  <span class="nx">pm</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;message1&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">body</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">data</span><span class="p">));</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//发送消息</span>
</span><span class='line'>  <span class="nx">pm</span><span class="p">({</span>
</span><span class='line'>    <span class="c1">//给那个iframe</span>
</span><span class='line'>    <span class="nx">target</span><span class="o">:</span> <span class="nb">window</span><span class="p">.</span><span class="nx">frames</span><span class="p">[</span><span class="s2">&quot;example1&quot;</span><span class="p">],</span>
</span><span class='line'>    <span class="c1">//频道</span>
</span><span class='line'>    <span class="nx">type</span><span class="o">:</span><span class="s2">&quot;message1&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="c1">//内容</span>
</span><span class='line'>    <span class="nx">data</span><span class="o">:</span><span class="p">{</span><span class="nx">hello</span><span class="o">:</span><span class="s2">&quot;world&quot;</span><span class="p">}</span>
</span><span class='line'>  <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[requirejs 使用]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/04/19/requirejs/"/>
    <updated>2013-04-19T22:59:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/04/19/requirejs</id>
    <content type="html"><![CDATA[<p><a href='http://requirejs.org/'>requirejs</a>是一个管理js模块加载与依赖包，可以不使用script标签来加载js文件<br />
1.引用requirejs文件<br /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">data</span><span class="o">-</span><span class="nx">main</span><span class="o">=</span><span class="s2">&quot;scripts/main&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;scripts/require.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.配置, <a href='http://requirejs.org/docs/api.html#config'>更多配置</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">requirejs</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//默认加载模块路径</span>
</span><span class='line'>    <span class="nx">baseUrl</span><span class="o">:</span> <span class="s2">&quot;js/lib&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//指定模块的路径</span>
</span><span class='line'>    <span class="nx">paths</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>        <span class="c1">//前面别名， 后面路径</span>
</span><span class='line'>        <span class="s2">&quot;jquery&quot;</span> <span class="o">:</span> <span class="s2">&quot;js/core/jquery.2.0.js&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;backbone&quot;</span> <span class="o">:</span> <span class="s2">&quot;js/core/backbone0.9.js&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;underscore&quot;</span><span class="o">:</span> <span class="s2">&quot;js/core/underscore.js&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//设置依赖关系</span>
</span><span class='line'>    <span class="nx">shim</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>        <span class="nx">backbone</span><span class="o">:</span><span class="p">{</span>
</span><span class='line'>            <span class="nx">deps</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;underscore&quot;</span><span class="p">,</span> <span class="s2">&quot;jquery&quot;</span><span class="p">],</span>
</span><span class='line'>            <span class="c1">//可以使用全局别名</span>
</span><span class='line'>            <span class="nx">exports</span><span class="o">:</span> <span class="s2">&quot;Backbone&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="c1">// js/dom.js</span>
</span><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s2">&quot;backbone&quot;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">Backbone</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">LoginView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">LoginView</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">require</span><span class="p">([</span><span class="s2">&quot;js/dom&quot;</span><span class="p">],</span> <span class="kd">function</span><span class="p">(</span><span class="nx">LoginView</span><span class="p">){</span>
</span><span class='line'>    <span class="k">new</span> <span class="nx">LoginView</span><span class="p">(</span>
</span><span class='line'>        <span class="p">...</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[backbone升级0.9.9版本，添加两个方法listenTo与stopListening]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/04/12/backbone-updated/"/>
    <updated>2013-04-12T23:35:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/04/12/backbone-updated</id>
    <content type="html"><![CDATA[<p>listenTo用于绑定事件，stopListening关闭绑定事件了<br />
它们与on有什么不同的呢！这里做个例子<br /></p>

<pre>
  var Todo = Backbone.Model.extend({
    ...
  })
   
  var todo = new Todo()
  var appView = Backbone.View.extend({
    initialize: function(){
      this.listenTo(todo, "change:name", this.edit_attr)
    },
    edit_attr: function(){
      this.$(".name").html(this.model.get('name'))
    }
  })

  var app_view = new appView()
  app_view.remove()  
</pre>


<p>当我们<code>app_view.remove()</code>删除之后会自动执行<code>stopListening</code>方法关注绑定事件<br />
<code>todo</code>模型就不会有这个视图绑的事件了，如果<br /></p>

<pre>
  this.listenTo(todo, "change:name", this.edit_attr)
</pre>


<p>改用这种绑定方式</p>

<pre>
  todo.on("change:name", this.edit_attr, this)
</pre>


<p><code>app_view.remove()</code>删除之后，todo模型还是会有这个绑定的事件<br />
当然也可以用off来处理，但是现在有listenTo就不用做特别的处理了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用php的Codeigniter框架 生图片验证码遇到的问题]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/03/20/captcha-generate/"/>
    <updated>2013-03-20T22:58:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/03/20/captcha-generate</id>
    <content type="html"><![CDATA[<p>根据官方网站介绍，可以使用<code>captcha</code>实现,实现方式如下<br /></p>

<pre>    

  /*
  * 控制加载
  */
  $this->load->helper('captcha');  
  ...

  /*
  * 方法
  */
  $vals = array(        
    'img_path' => './captcha/',
    'img_url' => 'http://localhost/finance/captcha/',
    'font_path' => "./system/fonts/texb.ttf"
  );

  $data["img_code"] = create_captcha($vals);
  ...
</pre>


<p>结果没有反应，然后进入<code>create_captcha</code>方法调试，发现在<code> extension_loaded('gd')</code><br/>
过滤了，经过google 搜索是没有加载gd库，然后在网上查加载gd库,配置一下php.ini文件如下:</p>

<p><code>
  extension=php_gd2.dll
</code>
由于我是安装wamp服务管理软件在里面选择一下，然后重启apache服务就ok了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[centOS rails + nginx + rvm  + capistrano + passenger + git  部署]]></title>
    <link href="http://huxinghai1988.github.com/blog/2013/03/01/capistrano-deploy/"/>
    <updated>2013-03-01T23:24:00+08:00</updated>
    <id>http://huxinghai1988.github.com/blog/2013/03/01/capistrano-deploy</id>
    <content type="html"><![CDATA[<p>所谓自动化部署<br />
步聚如下：<br /></p>

<p>1.在项目gemfile文件加入如下gem包，然后<code>bundle</code><br /></p>

<pre>
    gem rvm-capistrano
    gem passenger
</pre>


<p>2.然后执行<code>capify .</code>命令，生成两个文件路径如下<br /></p>

<pre>
    config/deploy.rb

    Capfile
</pre>


<p>3.配置deploy.rb文件，如下<br /></p>

<pre>
    #设置应用名称
    set :application, "dom1"
    #服务登陆用户与密码
    set :user,"root"
    set :password,"321654"
    #项目仓库地址
    set :repository,  "git@github.com:huxinghai1988/capistrano_dom"
    #服务地址
    set :domain,"192.168.2.27"

    #设置伪登陆
    default_run_options[:pty] = true 

    #设置权限
    set :use_sudo,false
    #使用git更新代码也可以使用svn
    set :scm, "git"
    #git用户名
    set :scm_user,"root"
    #git密码
    set :scm_passphrase,"123456"
    #部署服务器位置
    set :deploy_to,"/var/www/#{application}"
    #部署分支
    set :branch, "master"
    #产品模式
    set :rails_env, 'production'

    # Or: `accurev`, `bzr`, `cvs`, `darcs`, `git`, `mercurial`, `perforce`, `subversion` or `none`


    role :web, domain                          # Your HTTP server, Apache/etc
    role :app, domain                         # This may be the same as your `Web` server
    role :db,  domain, :primary => true      # This is where Rails migrations will run

    #rvm 安装路径与 ruby版本
    set :rvm_path,"/usr/local/rvm"
    set :rvm_bin_path,"/usr/local/rvm/bin"
    set :rvm_ruby_string,'ruby-1.9.2'

    require 'rvm/capistrano'
    require 'bundler/capistrano'

    #deploy:setup前安装rvm与ruby
    before 'deploy:setup' do
        run 'echo insecure > ~/.curlrc', :shell => 'bash -c'
        find_and_execute_task "rvm:install_rvm"
        find_and_execute_task 'rvm:install_ruby'
    end

    #可以在发布后设置上传目录
    after 'deploy' do
        run "mkdir -p #{release_path}/public/uploads"        
        run "ln -nfs #{shared_path}/user #{release_path}/public/uploads"
        run "chown -R nobody:nobody #{release_path}/public/uploads"    
    end


    load 'deploy/assets'
</pre>


<p>4.执行<code>cap deploy:setup</code>可以运行<code>cap -T</code>查看所有命令</p>

<p>5.安装完之后，执行<code>cap deploy</code>部署</p>

<p>6.成功部署后，到服务器安装nginx与passenger<br /></p>

<pre>
    passenger-install-nginx-module
</pre>


<p>出现如下选择<br /></p>

<pre>
    1.Yes: download, compile and install Nginx for me. (recommended)
    The easiest way to get started. A stock Nginx 1.0.10 with Passenger
    support, but with no other additional third party modules, will be
    installed for you to a directory of your choice.

    2.No: I want to customize my Nginx installation. (for advanced users)
    Choose this if you want to compile Nginx with more third party modules
    besides Passenger, or if you need to pass additional options to Nginx's
    'configure' script. This installer will 1) ask you for the location of
    the Nginx source code, 2) run the 'configure' script according to your
    instructions, and 3) run 'make install'.

    Whichever you choose, if you already have an existing Nginx configuration file,
    then it will be preserved.

    Enter your choice (1 or 2) or press Ctrl-C to abort: 这里建议选择1

    当询问nginx的安装路径的时候，个人建议安装默认，安回车就行了
    Please specify a prefix directory [/opt/nginx]: 
</pre>


<p>当安装完成后，会在console中提示如何配置Nginx<br />
Passenger会自动帮你将下面两行添加到Nginx的配置文件中/opt/nginx/conf/nginx.conf（很人性化）<br /></p>

<pre>
    http {
        ...
        passenger_root /Users/Daniel/.rvm/gems/ruby-1.9.3-p374/gems/passenger-3.0.19;
        passenger_ruby /Users/Daniel/.rvm/wrappers/ruby-1.9.3-p374/ruby;
        ...
    }
</pre>


<p>6.设置nginx.conf的静态目录,root参数指定到项目的public目录</p>

<pre>
    server {
        listen 80;
        server_name www.yourhost.com;
        root /var/www/dom1/current/public;   # <--- be sure to point to 'public'!
        passenger_enabled on;
    }
</pre>


<p>整体nginx.conf配置如下：<br /></p>

<pre>
    user  root;
    worker_processes  1;

    events {
        worker_connections  1024;
    }


http {
    passenger_root /Users/Daniel/.rvm/gems/ruby-1.9.3-p374/gems/passenger-3.0.19;
    passenger_ruby /Users/Daniel/.rvm/wrappers/ruby-1.9.3-p374/ruby;

    autoindex on;
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;
    server {
        listen       80;
        server_name  test1.local;
        passenger_enabled on;
        rails_env production;

        location / {
            passenger_enabled on;
            rails_env production;
            root   /var/www/dom1/current/public;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}
</pre>


<p>7.重新运行</p>

<pre>
    killall nginx           #杀死所有nginx进程
    /opt/nginx/sbin/nginx   #启动nginx
</pre>

]]></content>
  </entry>
  
</feed>
